<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="XWall.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Langs\Default.xaml"/>
            </ResourceDictionary.MergedDictionaries>
			<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
			<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        	<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFB2B2B2"/>
			<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
			<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
			<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
			<Style TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" BorderBrush="#FFC7C7C7" CornerRadius="1">
        					<Border.Background>
        						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        							<GradientStop Color="White" Offset="0"/>
        							<GradientStop Color="#FFECECEC" Offset="1"/>
        						</LinearGradientBrush>
        					</Border.Background>
        					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsDefaulted" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#FFECECEC" BeginTime="0:0:0.0" Duration="0:0:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="White" BeginTime="0:0:0.0" Duration="0:0:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="White" BeginTime="0:0:0.0" Duration="0:0:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimation To="#FFECECEC" BeginTime="0:0:0.0" Duration="0:0:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
        						<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
		<Style TargetType="{x:Type Hyperlink}">
			<Setter Property="Foreground" Value="#FF62A6E4"/>
			<Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Foreground" Value="#FF9966FF"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="True">
				<Setter Property="Cursor" Value="Hand"/>
			</Trigger>
		</Style.Triggers>
		</Style>

		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
        </Style>
		<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
		<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
		<Style TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="2" BorderBrush="#FFC7C7C7">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" BorderThickness="1"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.56"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
						<Condition Property="IsSelectionActive" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		<SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
		<Style x:Key="OptionMarkFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
		<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
		<Style TargetType="{x:Type CheckBox}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="checkBoxBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" BorderBrush="#FFC7C7C7" CornerRadius="1">
								<Grid x:Name="markGrid">
									<Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
									<Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
								</Grid>
							</Border>
							<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
								<Setter Property="Padding" Value="4,-1,0,0"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
								<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="{x:Null}">
								<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
								<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
			<SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#FAFAFA"/>
        	<SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
			<SolidColorBrush x:Key="TabItem.Static.Background" Color="#F2F2F2"/>
			<SolidColorBrush x:Key="TabItem.Static.Border" Color="#DEDEDE"/>
        	<SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        	<SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        	<SolidColorBrush x:Key="TabItem.Selected.Border" Color="#DEDEDE"/>
        	<SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        	<Style TargetType="{x:Type TabItem}">
        		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        		<Setter Property="Foreground" Value="Black"/>
        		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
        		<Setter Property="Margin" Value="0"/>
        		<Setter Property="Padding" Value="6,2,6,2"/>
        		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type TabItem}">
        					<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        						<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
        							<Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
        						</Border>
        						<ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
        							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
        							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
        							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
        							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
        							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
        							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
        							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        							<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
        							<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Panel.ZIndex" Value="1"/>
        							<Setter Property="Margin" Value="-2,-2,0,-2"/>
        							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Panel.ZIndex" Value="1"/>
        							<Setter Property="Margin" Value="-2,0,-2,-2"/>
        							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Panel.ZIndex" Value="1"/>
        							<Setter Property="Margin" Value="0,-2,-2,-2"/>
        							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
        						</MultiDataTrigger>
        						<MultiDataTrigger>
        							<MultiDataTrigger.Conditions>
        								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
        								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
        							</MultiDataTrigger.Conditions>
        							<Setter Property="Panel.ZIndex" Value="1"/>
        							<Setter Property="Margin" Value="-2,-2,-2,0"/>
        							<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
        							<Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
        							<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
        						</MultiDataTrigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style TargetType="{x:Type TabControl}">
        		<Setter Property="Padding" Value="2"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type TabControl}">
        					<Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition x:Name="ColumnDefinition0"/>
        							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
        						</Grid.ColumnDefinitions>
        						<Grid.RowDefinitions>
        							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
        							<RowDefinition x:Name="RowDefinition1" Height="*"/>
        						</Grid.RowDefinitions>
        						<TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
        						<Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
        							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        						</Border>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="TabStripPlacement" Value="Bottom">
        							<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
        							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
        							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
        							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
        							<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
        						</Trigger>
        						<Trigger Property="TabStripPlacement" Value="Left">
        							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
        							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
        							<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
        							<Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
        							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
        							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
        							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
        							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
        							<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
        						</Trigger>
        						<Trigger Property="TabStripPlacement" Value="Right">
        							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
        							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
        							<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
        							<Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
        							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
        							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
        							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
        							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
        							<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
